apiVersion: apps/v1
kind: Deployment
metadata:
  name: photo-pass-backend
  namespace: photo-pass
  labels:
    app: photo-pass-backend
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: photo-pass-backend
      tier: backend
  template:
    metadata:
      labels:
        app: photo-pass-backend
        tier: backend
    spec:
      containers:
      - name: photo-pass-backend
        image: photo-pass-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: photo-pass-config
              key: ALLOWED_ORIGINS
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: photo-pass-config
              key: LOG_LEVEL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: photo-pass-secrets
              key: SECRET_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: uploads-volume
          mountPath: /app/uploads
        - name: processed-volume
          mountPath: /app/processed
      volumes:
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: photo-pass-uploads-pvc
      - name: processed-volume
        persistentVolumeClaim:
          claimName: photo-pass-processed-pvc
